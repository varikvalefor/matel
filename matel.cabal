cabal-version: 2.4
name:          matel
version:       0.1.0.13
synopsis:      TUI client for the Matrix instant messaging service.
description:   Matel is a currently incomplete Haskell-based Matrix
               client.  Matel aims to have a terminal user interface
               which is intuitive but well-documented, in addition to
               having some very readable source code.

               Despite originating as a TUI-based thing, Matel _does_
               also offer a command-line interface, called "matelcli".

               Additionally, as of version 0.1.0.4, Matel's underlying
               infrastructure can now be used within other projects via
               the "matel" library.

               The guidelines for contributing to Matel and for
               submitting bug reports are visible in README.md.
bug-reports:   http://github.com/varikvalefor/matel/issues
license:       Unlicense
author:        Varik Valefor
maintainer:    varikvalefor@aol.com
copyright:     (c) Varik Valefor 2022.
category:      Chat

library
  ghc-options: -O2 -haddock -Wall
  exposed-modules:
    Metal.Auth
    Metal.Space
    Metal.Room
    Metal.Community
    Metal.Base
    Metal.User
    Metal.OftenUsedFunctions
    Metal.MatrixAPI.HighLevel
    Metal.MatrixAPI.LowLevel
    Metal.Messages.Encrypted
    Metal.Messages.Standard
    Metal.Messages.EncryptedFile
    Metal.Messages.FileInfo
    Metal.Messages.ThumbnailInfo
    Metal.Default
    Metal.EventCommonFields
    Metal.MatrixAPI.LowLevel.Crypto.Miscellaneous
  other-modules:
    -- The following modules export stuff which is of real use only
    -- within Metal.MatrixAPI.LowLevel.  These modules are hidden
    -- simply because these modules need not be exposed.
    Metal.MatrixAPI.LowLevel.Types
    Metal.MatrixAPI.LowLevel.Crypto
    Metal.MatrixAPI.LowLevel.ResponseToWhatever
    Metal.MatrixAPI.LowLevel.GetRoomInformation
    Metal.MatrixAPI.LowLevel.RecordCombination
    Metal.MatrixAPI.LowLevel.FetchEvents
    Metal.MatrixAPI.LowLevel.HTTP
  default-extensions:
    StrictData
  other-extensions:
    OverloadedStrings
    TemplateHaskell
    DeriveAnyClass
  build-depends:
    base ^>= 4.14.1.0,
    basic-prelude >= 0.7.0 && < 0.8,
    http-conduit >= 2.3.8 && < 2.4,
    aeson >= 1.5.6 && < 1.6,
    string-random >= 0.1.4 && < 0.2,
    async >= 2.2.4 && < 2.3,
    lens-aeson == 1.1.1,
    aeson-quick == 0.1.3,
    lens == 5.0.1,
    http-types >= 0.12.3 && < 0.13,
    cryptonite == 0.29,
    memory >= 0.16.0 && < 0.17,
    utf8-string == 1.0.*,
    text >= 1.2.4 && < 1.3,
    unordered-containers >= 0.2.19 && < 0.3,
    uri-encode >= 1.5 && < 1.6,
    bytestring == 0.10.12.0
    -- \^ Using both Text and ByteString may seem a bit much.  However,
    -- the purpose of Text is not the purpose of ByteString; Text
    -- contains _text_, whereas ByteString contains byte-oriented data,
    -- e.g., digital negatives and compiled binaries.  Who'd-a-thunk it?
  hs-source-dirs: src
  default-language: Haskell2010

executable matel
  main-is: matel.hs
  ghc-options: -haddock -threaded -O2 -dynamic
  other-modules:
    TUI
    Plegg
    Colour
    GetAuth
  build-depends:
    base ^>= 4.14.1.0,
    directory >= 1.3.6 && < 1.4,
    brick >= 0.64.2 && < 0.65,
    matel,
    text >= 1.2.4 && < 1.3,
    vty >= 5.33 && < 5.34
  hs-source-dirs: app
  default-language: Haskell2010

executable matelcli
  main-is: matelcli.hs
  ghc-options: -haddock -threaded -O2 -dynamic
  other-modules:
    GetAuth
    Plegg
  build-depends:
    base ^>= 4.14.1.0,
    directory >= 1.3.6 && < 1.4,
    matel,
    text >= 1.2.4 && < 1.3,
    bytestring == 0.10.12.0
    -- \^ bytestring is used for binary stuff.
    -- text is used for text-based data.
  hs-source-dirs: app
  default-language: Haskell2010

test-suite send-unencrypted-message
  type:           exitcode-stdio-1.0
  main-is:        send-unencrypted-message.hs
  hs-source-dirs: testes/matelcli
  default-language: Haskell2010
  build-depends:
    base ^>= 4.14.1.0,
    process == 1.6.*

test-suite grab-unencrypted-messages
  type:           exitcode-stdio-1.0
  main-is:        grab-unencrypted-messages.hs
  hs-source-dirs: testes/matelcli
  build-depends:
    base ^>= 4.14.1.0,
    process == 1.6.*
  default-language: Haskell2010

test-suite drip-drip-drip-goes-the-water
  type:           exitcode-stdio-1.0
  main-is:        sync.hs
  hs-source-dirs: testes/matelcli
  build-depends:
    base ^>= 4.14.1.0,
    process == 1.6.*
  default-language: Haskell2010

test-suite fromjson
  type:           exitcode-stdio-1.0
  ghc-options:    -dynamic -Wall
  main-is:        fromjson.hs
  hs-source-dirs: testes/core
  build-depends:
    matel,
    base ^>= 4.14.1.0,
    bytestring  == 0.10.12.0,
    aeson >= 1.5.6 && < 1.6
  default-language: Haskell2010
